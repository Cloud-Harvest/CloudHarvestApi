# This file defines two services: the API and MongoDB.
#   - The API service is built from the Dockerfile in the same directory.
#   - The MongoDB service uses the official MongoDB image from Docker Hub which is seeded by the mongo-seed service.


services:                           # Defines the services that make up your application
  harvest-api:                      # The first service is the API
    image: "${IMAGE_NAME-fionajuneleathers/cloud-harvest-api}:${IMAGE_TAG:-latest}"   # The Docker image to use for this service
    build:                          # Specifies the build configuration
      dockerfile: Dockerfile        # The name of the Dockerfile
      ssh:                          # Specifies SSH configurations
        - default
    ports:                          # Maps the port inside the Docker container to the host
      - "8000:8000"
    stop_signal: SIGINT             # Specifies the system call signal to be sent to the container to exit
    volumes:                        # Specifies the paths that should be mounted into the container
      - "~/.ssh:/root/.ssh"
      - "./app/:/src/app/"
    working_dir: /src               # The working directory inside the container
    networks:                       # Specifies the networks the container should connect to
      - harvest-network
    environment:                     # Add environment variables
      HTTPS_PROXY: "${HTTPS_PROXY}"
      NO_PROXY: "${NO_PROXY}"

  # ********************************************************************************
  # NOTE: This service is intended to be used when running the HarvestApi locally
  # For the purposes of a production deployment, the MongoDB database should
  # be hosted on a separate server and this service should be removed.
  # ********************************************************************************

  mongo:                            # The second service is MongoDB
    image: mongo                    # The Docker image to use for this service
    container_name: harvest-mongo   # The name of the container
    restart: always                 # Specifies the restart policy
    ports:                          # Maps the port inside the Docker container to the host
      - "27017:27017"
    volumes:                        # Specifies the paths that should be mounted into the container
      - mongo-data:/data/db
    command: >                      # The command to run inside the container 
      /bin/bash -c "
        docker-entrypoint.sh --bind_ip_all --logappend
      "
    networks:                       # Specifies the networks the container should connect to
      - harvest-network
    environment:                     # Add environment variables
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME-admin}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD-default-harvest-password}"
      HTTPS_PROXY: "${HTTPS_PROXY}"
      NO_PROXY: "${NO_PROXY}"

  mongo-seed:                       # The service to seed the MongoDB database
    image: mongo
    depends_on:                     # Specifies the services that this service depends on
      - mongo
    volumes:
      - ./mongodb:/mongo-seed
    networks: # Specifies the networks the container should connect to
      - harvest-network
    command: >
      /bin/bash -c '
      sleep 10
      && mongosh harvest-mongo/harvest
      --username ${MONGO_INITDB_ROOT_USERNAME-admin}
      --password ${MONGO_INITDB_ROOT_PASSWORD-default-harvest-password}
      --authenticationDatabase admin
      /mongo-seed/mongo-seed.js'

networks:                           # Defines the networks to be used by the services
  harvest-network:                  # The name of the network
    driver: bridge                  # The network driver to be used

volumes:
  mongo-data:  # Define the persistent volume
